package com.gmail.sersaseks;

import java.io.File;
import java.io.IOException;

public class Main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		FileFilterImplementation ffilt = new FileFilterImplementation("pdf");
		File folderFrom = new File("folderFrom");
		File folderTo = new File("folderTo");
		try {
			FileOperation.copyFolder(folderFrom, folderTo, ffilt);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
package com.gmail.sersaseks;

import java.io.File;
import java.io.FileFilter;

public class FileFilterImplementation implements FileFilter {
	private String[] arr;

	public FileFilterImplementation(String... arr) {
		super();
		this.arr = arr;
	}

	private boolean check(String ext) {
		for (String stringExt : arr) {
			if (stringExt.equals(ext)) {
				return true;
			}
		}
		return false;
	}

	@Override
	public boolean accept(File pathname) {
		int pointerIndex = pathname.getName().lastIndexOf(".");
		if (pointerIndex == -1) {
			return false;
		}
		String ext = pathname.getName().substring(pointerIndex + 1);
		return check(ext);
	}
}package com.gmail.sersaseks;

import java.io.File;
import java.io.FileFilter;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

public class FileOperation {
	public static void copyFile(File from, File to) throws IOException {
		if (from == null || to == null) {
			throw new IllegalArgumentException("null file pointer");
		}
		try (FileInputStream fis = new FileInputStream(from); FileOutputStream fos = new FileOutputStream(to)) {
			byte[] buffer = new byte[1024 * 1024];
			int readByte = 0;
			for (; (readByte = fis.read(buffer)) > 0;) {
				fos.write(buffer, 0, readByte);
			}
		}

	}

	public static void copyFolder(File folderFrom, File folderTo, FileFilter ffilt) throws IOException {
		if (folderFrom == null || folderTo == null || ffilt == null) {
			throw new IllegalArgumentException("null file pointer");
		}

		File[] files = folderFrom.listFiles(ffilt);
		for (File file : files) {
			copyFile(file, new File(folderTo, file.getName()));
		}
	}
}
